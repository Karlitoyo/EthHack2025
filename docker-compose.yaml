services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: "npm run start:dev"
    ports:
      - "4001:4001"
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: "npm run dev"
    environment:
      NODE_ENV: "development"
      WATCHPACK_POLLING: true
      CHOKIDAR_USEPOLLING: true
      APPLICATION_PORT: "4000"
    ports:
      - "4000:4000"
    volumes:
      - ./frontend:/app
    depends_on:
      - backend

  db:
    container_name: hospital_app
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

  rust-zkp-service:
    container_name: zksnark_service
    environment:
      - RUST_BACKTRACE=full
    build:
      context: ./zksnark_service
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Expose port 8080
    depends_on:
      - db
    volumes:
      - ./zkp-params:/app/zkp-params
    healthcheck:
      test: ["CMD", "sha256sum", "/app/zkp-params/groth16_params.bin"]
      interval: 10s
      timeout: 5s
      retries: 2
